version: 2.1

# mengambil atau pull image yang akan digunakan
executors:
  golang-docker:
    docker:
      - image: cimg/go:1.21
  docker-executor:
    docker:
      - image: cimg/base:stable

# perintah yang akan dilakukan selama Continuous Integration
jobs:
  # perintah melakukan proses pada lint-dockerfile
  lint-dockerfile:
    # memanggil image sebelumnya
    executor: docker-executor
    steps:
      # menuju branch lokasi file saat ini
      - checkout
      # Menjalankan perintah sesuai dengan name
      - run:
          name: Install hadolint
          # Membuat direktori lokal untuk menyimpan binary.
          # Download hadolint ke direktori user (yang punya akses tulis).
          # Membuat binary bisa di jalankan
          # Menambahkan ~/bin ke PATH di sesi CircleCI.
          # Memuat ulang konfigurasi shell agar perubahan PATH langsung berlaku.
          command: |
            mkdir -p ~/bin
            curl -L -o ~/bin/hadolint https://github.com/hadolint/hadolint/releases/latest/download/hadolint-Linux-x86_64
            chmod +x ~/bin/hadolint
            echo 'export PATH=$PATH:~/bin' >> $BASH_ENV
            source $BASH_ENV
      - run:
          name: Run hadolint on Dockerfile
          # menjalankan hadolint terhadap berkas Dockerfile
          command: hadolint Dockerfile
  # perintah melakukan proses pada test-app
  test-app:
    # memanggil image sebelumnya
    executor: golang-docker
    steps:
      # menuju branch lokasi file saat ini
      - checkout
      - run:
          name: Run Go unit tests
          # menjalankan unit test untuk backend
          command: go test -v -short --count=1 $(go list ./...)
  # perintah melakukan proses pada build-app-karsajobs
  build-app-karsajobs:
    # memanggil image sebelumnya
    executor: docker-executor
    steps:
      # menuju branch lokasi file saat ini
      - checkout
      # mengaktifkan Docker daemon agar perintah Docker bisa jalan di dalam job CircleCI
      - setup_remote_docker
      - run:
          name: Build and Push Docker Image
          # membuat Docker image dari Dockerfile
          # Login ke GitHub Packages
          # Mengunggah GitHub Packages
          command: |
            docker build -t ghcr.io/anril32/karsajobs:latest .
            echo $CR_PAT | docker login ghcr.io -u anril32 --password-stdin
            docker push ghcr.io/anril32/karsajobs:latest
# Menentukan urutan pekerjaan
workflows:
  version: 2
  karsajobs-workflow:
    jobs:
      - lint-dockerfile
      - test-app
      - build-app-karsajobs:
          requires:
            - test-app
