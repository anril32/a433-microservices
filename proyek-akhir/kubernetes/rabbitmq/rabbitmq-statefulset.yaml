# versi API yang digunakan
apiVersion: apps/v1
# mengindikasikan resource yang digunakan
kind: StatefulSet
# berisi informasi yang relevan terkait resource dan membantu dalam pengidentifikasian
metadata:
  name: rabbitmq
  namespace: rabbitmq
# tempat kita menspesifikasikan resource
spec:
  selector:
    matchLabels:
      app: rabbitmq
  # menentukan nama service yang akan digunakan untuk mengakses sebuah Service
  serviceName: "rabbitmq"
  # replica Pod berjumlah 1
  replicas: 1
  # menentukan waktu minimum (dalam detik) yang harus berlalu sebelum sebuah Pod dianggap siap dan dapat dilayani setelah Pod tersebut dibuat
  minReadySeconds: 10
  # tempat kita menspesifikasikan resource pod yang akan digunakan
  template:
    # berisi informasi yang relevan terkait resource dan membantu dalam pengidentifikasian
    metadata:
      labels:
        app: rabbitmq
    # tempat kita menspesifikasikan resource
    spec:
      # mendefinisikan spesifikasi container di dalam Pod
      containers:
          # nama container
        - name: rabbitmq
          # image yang digunakan
          image: rabbitmq:3.8-management-alpine
          # image hanya akan diunduh bila tidak tersedia secara lokal
          imagePullPolicy: IfNotPresent
          # mengekspos port
          ports:
            - containerPort: 5672
              name: amqp
            - containerPort: 15672
              name: management
          # memasangkan volume dengan nama volume diambil dari deklarasi volume dan letak volume yang akan dipasang
          volumeMounts:
            - name: rabbitmq-data
              mountPath: /var/lib/rabbitmq
      # deklarasi volume dalam Pod
      volumes:
        # Mengambil volume dari rabbitmq-pvc
        - name: rabbitmq-data
          persistentVolumeClaim:
            claimName: rabbitmq-pvc
